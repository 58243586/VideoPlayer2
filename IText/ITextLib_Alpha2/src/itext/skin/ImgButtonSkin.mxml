<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             alpha.disabled="0.5"
             xmlns:mx="library://ns.adobe.com/flex/mx">
    <fx:Metadata>
        <![CDATA[
		[HostComponent("spark.components.Button")]
		]]>
    </fx:Metadata>
    <fx:Script>
        <![CDATA[
            import mx.events.FlexEvent;

            private var over:MouseUpSkin = new MouseUpSkin();

            private var down:MouseDownSkin = new MouseDownSkin();


            [Bindable]
            private var _leftImg:Object = null;

            /**
             * 设置按钮中文字左边的图像
             */
            public function get leftImg():Object
            {
                return _leftImg;
            }

            /**
             * 获取按钮中文字左边的图像
             */
            public function set leftImg(value:Object):void
            {
                _leftImg = value;
            }

            [Bindable]
            private var _rightImg:Object = null;

            /**
             * 设置按钮中文字右边的图像
             */
            public function get rightImg():Object
            {
                return _rightImg;
            }

            /**
             * 获取按钮中文字右边的图像
             */
            public function set rightImg(value:Object):void
            {
                _rightImg = value;
            }

            private function resizeMouseSkin():void
            {
                over.width = this.width;
                over.height = this.height;
                down.width = this.width;
                down.height = this.height;
            }

            protected function enterStateHandler(event:FlexEvent):void
            {
                switch (this.currentState.toString())
                {
                    case "over":
                        resizeMouseSkin();
                        skinUI.addChild(over);
                        break;
                    case "down":
                        resizeMouseSkin();
                        skinUI.addChild(down);
                        break;
                }
            }

            protected function exitStateHandler(event:FlexEvent):void
            {
                switch (this.currentState.toString())
                {
                    case "over":
                        skinUI.removeChild(over);
                        break;
                    case "down":
                        skinUI.removeChild(down);
                        break;
                }
            }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <s:SolidColor id="fillColor"
                      color="#FFFFFF"
                      color.over="#DDDDDD"
                      color.down="#FF0000" />
        <s:SolidColorStroke id="strokeColor"
                            color="#333333"
                            color.over="#111111"
                            weight="2" />
    </fx:Declarations>

    <s:states>
        <s:State name="up" />
        <s:State name="over"
                 enterState="enterStateHandler(event)"
                 exitState="exitStateHandler(event)" />
        <s:State name="down"
                 enterState="enterStateHandler(event)"
                 exitState="exitStateHandler(event)" />
        <s:State name="disabled" />
    </s:states>

    <mx:UIComponent id="skinUI" />

    <s:HGroup id="skinHGroup"
              gap="2"
              paddingLeft="10"
              paddingRight="10"
              paddingTop="5"
              paddingBottom="5"
              verticalAlign="middle">
        <s:BitmapImage id="icon"
                       source="{_leftImg}"
                       verticalCenter.up="0"
                       horizontalCenter.up="0" />
        <s:Label id="labelDisplay"
                 paddingLeft="2"
                 top="9"
                 bottom="6" />
        <s:BitmapImage id="arrow"
                       source="{_rightImg}" />
    </s:HGroup>
</s:SparkSkin>
